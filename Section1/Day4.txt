--------------------------------------
Author- Anshu Kumar Singh a.k.a. Sidam
Purpose- Notes of Learning C++
Date - 18/03/2022

Day4 Of Learning C++
--------------------------------------


    * Primitive Datatypes
    * 
    * There are mainly four, int, float, char and bool. Also, they have their own brothers and
    * sisters that we'll also talk about, there are even more that we'll know about later.
    * 
    * First let me tell you that values are saved in bits, and every data type takes a specific
    * amount of bits for storing values. We can know how many values can be stored in an amount
    * of bits by the formula, 2^n, where n is the number of bits.
    * For example, if we have 8 bits, we can store 2^8, which is 256 distinct values.
    * Same as that, if we have 64 bits, we can store 2^64, which is 18446744073709551615 
    * distinct values. And by saying distinct values, I don't mean we can store multiple distint 
    * values at the same time. Every character or number is converted into binary which is 0s and
    * 1s, and every bit spaces is occupied by a 1 or a 0. Take, 'A' which is a 8 bit character, 
    * it's binary is 01000001 so with that those bits are now occupied by the character 'A', in
    * that sense, if you want, you can replace the value of those 8 bits to something else and it 
    * will change the placement of 0s and 1s, they might be 1s in all 8 bits can all be 0s, and in 
    * that way there can be 256 different values, meaning different combinations of 0s and 1s.
    * 
    * Char- Char means character, it stores a single word and takes 8 bits of space and since 
    * there are lots more than 256 characters, 8 bits are not enough, meaning a combination of 
    * just 8 0s and 1s are not enough. You can check by searching UTF-8 for 8 bit characters, 
    * and thus 16 and 32 for 16 and 32 bit characters. Yes, there datatype changes a bit, 
    * Char16_t for 16 bit which takes 16 bits of space and Char32_t for 32 bit characters which
    * takes 32 bits of space. And there's one more, wchar_t which is for largest available set of
    * 0s and 1s, well I don't quite get what it actually is for or how we can use it, I read a 
    * couple lines on the net, but they all just kinda bounced outta my brain.
    * 
    * One more thing to remember is that, for a single character, single quotes are used(''), and
    * for more double quotes are used("") that we'll study later.
    * 
    * Also, you may see on the internet that char takes 1 byte, so focus, I said it takes 8 bits 
    * not 8 bytes, 1 byte is 8 bits, so, we all are right.
    * 
    * Int- Which is for integers. Takes atleast 16bits and may change to 32 which is it's normal for
    * 64bit operating system, it switches to 16bits for supporting the 32bit operating system.
    * Now, I'll be telling you values for all of int's brothers and sisters as an atleast value,
    * meaning for 32bit OS, if you want for 64bit OS, then internet's all yours. I'll let you know 
    * for the ones I know.
    * 
    * There are also, two kinds of ints, first signed(+ve, -ve) and unsigned(all +ve), so if you 
    * want vars for kilometers or length, you should use unsigned since those just can't be -ve.
    * Also, if you want to use signed ints you can just write int, but for unsigned you have 
    * to write unsigned ahead of int.
    * 
    * Signed--
    * short int - 16bits - if you already know your number isn't gonna be that long, you should 
    * use this, same for 64bit OS.
    * int - 16bit/32bit.
    * long int - 32bits - if you think your numbers gonna be too long and normal int won't be
    * able to contain it.
    * long long int - 64bits - for storing the length of distance between Earth and Andromeda 
    * in kilometers ;).
    * 
    * Unsigned--
    * Things are kinda same for unsigned, you just have to type unsigned before everything for 
    * using them. And you can know from what number to what number you can store in each datatypes,
    * you just have to search the net.
    * 
    * 
    * Float- For floating point number, meaning decimals.
    * 
    * float- stores decimal numbers with upto 7 decimal digits. -- (1.2 * 10^-38) to (3.4 * 10^38) 
    * double- big bro of float stores numbers with upto 15 decimal digits. -- (2.2 * 10^-308)
    * to (1.8 * 10^308)
    * long double- This one can store numbers with upto 30 decimal digits. -- (3.3 * 10^-4932) to 
    * ( 1.2 * 10^4932)
    * 
    * Bool - Takes 8 bits/1 byte. For values, True or False. One more thing to know is that 1 means 
    * true and 0 means false, you may use these numbers as a replacement of the words.
    * 
    * Bye, we'll learn about sizeof() and constants next time.